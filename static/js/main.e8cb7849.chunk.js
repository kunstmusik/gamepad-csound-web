(this["webpackJsonpgamepad-csound-web"]=this["webpackJsonpgamepad-csound-web"]||[]).push([[0],{13:function(e,n,t){},14:function(e,n,t){},25:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(7),s=t.n(r),c=(t(13),t(3)),i=(t(14),t(2)),l=t.n(i),u=new Array(14).fill(!1);var d=function(){var e=Object(a.useState)(null),n=Object(c.a)(e,2),t=n[0],r=n[1],s=Object(a.useState)(!1),i=Object(c.a)(s,2),d=i[0],p=i[1],m=function e(){var n=navigator.getGamepads();if(n.length>0){for(var a=n[0],o=0;o<a.buttons.length;o++)a.buttons[o].pressed!==u[o]&&(u[o]=a.buttons[o].pressed,u[o]?t.evaluateCode("schedule(1.".concat(o,", 0, -2, cpsmidinn(48 + 2 * ").concat(o,"), ampdbfs(-12))")):t.evaluateCode("schedule(-1.".concat(o,", 0, 2, cpsmidinn(48 + 2 * ").concat(o,"), ampdbfs(-12))")));for(var r=0;r<a.axes.length;r++)t.setControlChannel("axis".concat(r),a.axes[r])}requestAnimationFrame(e)};return Object(a.useEffect)((function(){null==t&&l.a.initialize().then((function(){var e=new l.a;r(e)}))}),[t]),o.a.createElement("div",{className:"App"},t?o.a.createElement("header",{className:"App-header"},o.a.createElement("div",null,o.a.createElement("h1",null,"Xbox One Controller + Csound"),o.a.createElement("div",{style:{maxWidth:800,textAlign:"left"}},o.a.createElement("p",null,"This is a proof-of-concept web application that uses input from the GamePad API together with WebAudio Csound to create an interactive instrument.  The site is currently hardcoded for use with an Xbox One controller."),o.a.createElement("p",null,"To use: button presses turn on notes and releases turn off notes. Analog input is used to control filter cutoff, pitch bend, and vibrato frequency and amplitude."))),o.a.createElement("div",null,d?o.a.createElement("div",null,"Running..."):o.a.createElement("button",{onClick:function(){t.setOption("-+msg_color=false"),t.compileOrc('\n  sr = 48000\n  ksmps = 64\n  nchnls=2\n  0dbfs=1\n\n  instr  1\n    kpchbend = port(chnget:k("axis1") * -1, 0.05)\n    kvibamp = port(chnget:k("axis3") * -.5 + 0.5, 0.05)\n    kvibfreq = port(chnget:k("axis2") * 4 , 0.05)\n\n    kfreq = p4 * semitone(kpchbend) \n    kfreq *= cent(oscili:k(kvibamp, kvibfreq) * 20)\n\n    asig = vco2(1, kfreq) \n    asig += vco2(0.25, kfreq * 1.5) \n\n    kcut = port(chnget:k("axis0"), 0.05) * 2 + 11.5 \n    asig = zdf_ladder(asig, cpsoct(kcut), 0.5) \n\n    asig *= expsegr(0.001, .05, 0.1, 2, 0.001)\n\n    out(asig, asig)\n  endin\n\n'),t.start(),t.audioContext.resume(),p(!0),requestAnimationFrame(m)}},"Start App"))):o.a.createElement("header",{className:"App-header"},"Loading..."))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(d,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))},8:function(e,n,t){e.exports=t(25)}},[[8,1,2]]]);
//# sourceMappingURL=main.e8cb7849.chunk.js.map